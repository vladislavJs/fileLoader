{"version":3,"sources":["upload.js","app.js"],"names":["byteToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","classList","add","textContent","noop","upload","select","options","files","onUpload","input","querySelector","preview","buttonOpen","buttonUpload","multiple","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeInput","event","from","target","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","insertAdjacentHTML","name","result","size","readAsDataURL","removeHandler","dataset","filter","block","closest","remove","clearPreview","el","style","bottom","uploadHandler","querySelectorAll","e","previewInfo","addEventListener","console"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function byteToSize(bytes) {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n    if(!bytes) {\n        return '0 Byte'\n    }\n\n    const i =   parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]\n\n}\n\nconst element = (tag, classes = [], content = '') => {\n    const node = document.createElement(tag)\n    node.classList.add(...classes)\n    node.textContent = content\n\n    return node\n}\n\nfunction noop () {\n\n}\n\nexport function upload(select, options = {}) {\n    let files = []\n    const onUpload = options.onUpload() || noop\n    const input = document.querySelector(select)\n    const preview = element('div', ['preview'])\n    const buttonOpen = element('button', ['btn'], 'Open')\n    const buttonUpload = element('button', ['btn', 'primary'], 'Load')\n\n    if(options.multiple) {\n        input.setAttribute('multiple', true)\n    }\n\n    if(options.accept && Array.isArray(options.accept)) {\n      input.setAttribute('accept', options.accept.join(','))\n    }\n\n    input.insertAdjacentElement('afterend', preview)\n    input.insertAdjacentElement('afterend', buttonUpload)\n    input.insertAdjacentElement('afterend', buttonOpen)\n\n    const triggerInput = () => input.click()\n    const changeInput = (event) => {\n        files = Array.from(event.target.files)\n        preview.innerHTML = ''\n        files.forEach(file => {\n            if(!file.type.match('image')) {\n                return\n            }\n\n            const reader = new FileReader()\n            reader.onload = ev => {\n                preview.insertAdjacentHTML('afterbegin', `\n                    <div class=\"preview-image\">\n                        <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\n                        <img src=\"${ev.target.result}\" alt=\"${file.name}\" />\n                        <div class=\"preview-info\">\n                            <span>${file.name}</span>\n                            <span>${byteToSize(file.size)}</span>\n                        </div>\n                    </div>\n                    \n                `)\n            }\n            reader.readAsDataURL(file)\n        })\n    }\n\n    const removeHandler = event => {\n        if(!event.target.dataset.name) {\n            return\n        }\n\n        const {name} = event.target.dataset\n        files = files.filter(file => file.name !== name)\n        const block = preview.querySelector(`[data-name=\"${name}\"]`).closest('.preview-image')\n        block.classList.add('removing')\n        block.remove()\n    }\n\n    const clearPreview = el => {\n        el.style.bottom = '4px'\n        el.innerHTML = '<div class=\"preview-info-progress\"></div>'\n    }\n    const uploadHandler = () => {\n        preview.querySelectorAll('.preview-remove').forEach(e => e.remove())\n        const previewInfo = preview.querySelectorAll('.preview-info')\n        previewInfo.forEach(clearPreview)\n\n        onUpload(files)\n    }\n\n    buttonOpen.addEventListener('click', triggerInput)\n    input.addEventListener('change', changeInput)\n    preview.addEventListener('click', removeHandler)\n    buttonUpload.addEventListener('click', uploadHandler)\n}","import {upload} from './upload'\n\nupload('#fileLoader', {\n    multiple: true,\n    accept: ['.png', '.jpeg', '.jpg', '.gif'],\n    onUpload(files) {\n        console.log(files)\n    }\n})"]}